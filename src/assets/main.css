@import './base.css';

body {
  min-width: 100vw;
  min-height: 100vh;
  background: var(--BGColor);
  font-family: 'MFontR';
  font-size: 14px;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
}

/* #region ScrollBar */
::-webkit-scrollbar {
  width: 5px;
  height: 5px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
  width: 10px;
}

::-webkit-scrollbar:hover * {
  width: 10px;
}

::-webkit-scrollbar-track:hover {
  width: 10px;
}

/* #endregion */

/* #region Component */
.ComponentWrapper {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
  padding: 85px 0 10px 0;
  color: var(--TextColor);
}

.ComponentButtons {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  justify-content: center;
}

/* #endregion */

/* #region MButton */
.MButton {
  display: flex;
  background-color: var(--PrimaryColor);
  padding: 10px 30px;
  border-radius: 5px;
  font-family: 'MFontB';
  cursor: pointer;
  transition-duration: 0.3s;
  color: #fff;
  text-decoration: none;
  margin: 5px;
}

.MButton:hover {
  background-color: var(--MButtonBG);
  color: var(--PrimaryColor);
  fill: var(--PrimaryColor);
}

/* #endregion */

/* #region MGroup */
.MGroup {
  display: flex;
  background-color: var(--MGroupBG);
  border-radius: 5px;
  padding: 10px;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  margin: 10px 0;
  width: 100%;
  box-shadow: 0 2px 5px 1px #0000001a;
}

.ModalMGroup {
  margin: 10px 20px;
}

.MGroupTitle {
  display: flex;
  width: 100%;
  font-family: 'MFontB';
  font-size: 16px;
  justify-content: center;
  color: var(--TextColor);
  margin-bottom: 15px;
}

.MGroupButtons {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  padding: 5px;
}

.MGroupSeperator {
  display: flex;
  width: calc(100% - 10px);
  justify-content: center;
  height: 1px;
  margin: 20px 0;
  background-color: #777;
}

/* #endregion */

/* #region MField */
.MField {
  display: flex;
  flex-wrap: wrap;
  position: relative;
  transition-duration: 0.3s;
  z-index: 1;
  align-items: center;
  font-size: 16px;
  font-family: 'MFontR';
  margin: 15px 5px;
  min-height: 35px;
  flex: 1;
  min-width: 150px;
}

.MField label {
  display: flex;
  width: min-content;
  position: absolute;
  pointer-events: none;
  top: 7px;
  right: 5px;
  font-family: 'MFontR';
  font-size: 14px;
  color: var(--MFieldLabelColor);
  transition-duration: 0.3s;
  padding: 0 3px;
  z-index: 5;
  white-space: nowrap;
}

.MField label::before {
  content: '';
  position: absolute;
  height: 3px;
  width: 100%;
  bottom: 3px;
  right: 0;
  background-color: var(--MFieldBG);
  z-index: -1;
  transition-duration: 0.3s;
}

.MField input,
.MField textarea {
  margin: 6px 8px;
  display: flex;
  width: 100%;
  padding: 0;
  background-color: rgba(0, 0, 0, 0);
  border: 0;
  outline: 0;
  font-family: 'MFontR';
  font-size: 15px;
  color: var(--TextColor);
}

.MFieldBG {
  display: flex;
  width: calc(100% - 4px);
  height: 100%;
  border-radius: 5px;
  background-color: var(--MFieldBG);
  border: 1px solid var(--MFieldBorder);
  position: absolute;
  top: 0;
  right: 0;
  z-index: -1;
  transition-duration: 0.3s;
}

.MFieldBTN {
  position: absolute;
  width: 28px;
  height: 28px;
  padding: 0;
  left: 7px;
  top: 4px;
  margin: 0;
  justify-content: center;
  align-items: center;
}
.MFieldBTN svg {
  display: flex;
  width: 60%;
  height: 60%;
  fill: #fff;
}

.MField input:focus~.MFieldBG,
.MField textarea:focus~.MFieldBG {
  border: 1px solid var(--PrimaryColor);
}

.MField input:valid:not(:focus)~.MFieldBG,
.MField textarea:valid:not(:focus)~.MFieldBG {
  border: 1px solid var(--TextColor);
}

.MField input:focus~label,
.MField textarea:focus~label {
  color: var(--PrimaryColor);
  top: -13px;
  font-size: 13px;
  font-family: 'MFontR';
}

.MField input:valid:not(:focus)~label,
.MField textarea:valid:not(:focus)~label {
  color: var(--TextColor);
  top: -13px;
  font-size: 13px;
  font-family: 'MFontR';
}

.MField input:read-only,
.MField textarea:read-only {
  color: var(--MFieldDisabled);
  cursor: default;
  line-height: 0.5;
}

.MField input:read-only~.MFieldBG,
.MField textarea:read-only~.MFieldBG {
  border: 1px dashed var(--MFieldDisabled);
}

.MField input:read-only~label,
.MField textarea:read-only~label {
  color: var(--MFieldDisabled);
  top: -13px;
  font-size: 13px;
  font-family: 'MFontR';
}

.MField input[DateType='Day'],
.MField input[DateType='Month'] {
  width: 20%;
  max-width: 30px;
  margin: 5px;
  text-align: center;
}

.MField input[DateType='Year'] {
  flex: 1;
  margin: 5px;
  text-align: right;
}

/* #endregion */

/* #region Attachments */
.Attachments {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  justify-content: center;
}

.Attachment {
  display: flex;
  width: 120px;
  border-radius: 5px;
  border: 1px solid var(--AttachmentBorder);
  background-color: var(--AttachmentBG);
  margin: 5px;
}

.AttachmentContainer {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
}

.AttachmentImage {
  display: flex;
  width: 100%;
  height: 100px;
  border-radius: 5px;
  margin: 5px 5px 0 5px;
  justify-content: center;
  align-items: center;
  font-family: 'MFontB';
}

.AttachmentImage img {
  display: flex;
  width: 100%;
  height: 100%;
  border-radius: 5px;
  object-fit: cover;
}

.AttachmentButtons {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  justify-content: center;
}

.AttachmentButtons .MButton {
  min-width: 0;
  width: 20px;
  height: 20px;
  margin: 5px 2.5px;
  padding: 5px;
}

.AttachmentButtons svg {
  display: flex;
  width: 100%;
  height: 100%;
  fill: #fff;
}

.AttachmentButtons .MButton:hover svg {
  fill: var(--PrimaryColor);
}

.AttachmentName {
  display: flex;
  width: 100%;
  margin: 0 5px 5px 5px;
  border-top: 1px solid var(--AttachmentBorder);
}

.AttachmentName input {
  display: flex;
  width: 100%;
  border: 0;
  outline: none;
  background-color: transparent;
  text-align: center;
  margin-top: 5px;
  font-family: 'MFontR';
  font-size: 14px;
  color: var(--TextColor);
}

input[type='file'] {
  display: none;
}

/* #endregion */

/* #region Modals */
/* ========== Modals ========== */
.ActiveModal {
  overflow: hidden;
}

.ModalContainer {
  position: fixed;
  height: 100vh;
  width: 100vw;
  top: 0;
  left: 0;
  transform: scale(0);
  z-index: 201;
  display: none;
  animation: unfoldIn 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}

.ModalContainer.out {
  transform: scale(1);
  animation: unfoldOut 0.5s 0.2s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}

.ModalContainer.out .ModalBackground .Modal {
  animation: zoomOut 0.3s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}

.ModalContainer .ModalBackground {
  display: table-cell;
  background: rgba(0, 0, 0, 0.8);
  text-align: center;
  vertical-align: middle;
}

.ModalContainer .ModalBackground .Modal {
  background-color: var(--BGColor);
  display: inline-block;
  border-radius: 4px;
  font-weight: 300;
  position: relative;
  width: 90vw;
  min-width: 250px;
  max-width: max-content;
  vertical-align: middle;
  overflow: auto;
  max-height: 95vh;
  padding: 0;
  margin-top: 10px;
  transform: scale(0);
  animation: zoomIn 0.3s 0.4s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}

.ModalHeaderRow {
  width: 100%;
  background-color: var(--Color2);
  border-bottom: 2px solid var(--TextColor);
  border-radius: 4px 4px 0 0;
}

.ModalHeaderTitle {
  font-family: MFontB;
  font-size: 16px;
  color: var(--TextColor);
  padding: 7px 0 10px 0;
}

.ModalHeaderCloseBTN {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
}

.ModalHeaderCloseBTN svg {
  width: 20px;
  fill: var(--TextColor);
}

.ModalHeaderCloseBTN:active svg {
  fill: var(--PrimeryColor);
}

.ModalContent {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  justify-content: center;
  overflow-y: auto;
  max-height: calc(90vh - 65px);
  padding: 10px 0;
}

.ModalContentGroup {
  width: calc(100% - 10px);
  display: flex;
  flex-wrap: wrap;
  background-color: rgba(255, 255, 255, 0.1);
  margin: 10px 0;
  border-radius: 4px;
  justify-content: center;
  position: relative;
}

.ModalContentGroupTitle {
  width: 100%;
  display: flex;
  font-family: MFontB;
  font-size: 16px;
  color: #fff;
  border-bottom: 1px solid #fff;
  border-radius: 4px 4px 0 0;
  background-color: rgba(255, 255, 255, 0.2);
  padding: 7px 0;
  justify-content: center;
  margin-bottom: 8px;
}

.ModalContentGroupFields {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  justify-content: center;
}

.ModalContentGroup input::placeholder {
  color: #666;
  opacity: 1;
}

.ModalContentGroup .MFieldInput,
.ModalContentGroup .MFieldValue {
  background-color: rgba(0, 0, 0, 0.3);
  border: 1px solid #666;
}

.ModalContentGroupButtons {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  margin: 5px 0;
  justify-content: center;
}

.ModalContentGroupButtons .MButton {
  flex: 1;
  max-width: 300px;
}

.ModalButtons {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  justify-content: center;
}

@keyframes unfoldIn {
  0% {
    transform: scaleY(0.005) scaleX(0);
  }

  50% {
    transform: scaleY(0.005) scaleX(1);
  }

  100% {
    transform: scaleY(1) scaleX(1);
  }
}

@keyframes unfoldOut {
  0% {
    transform: scaleY(1) scaleX(1);
  }

  50% {
    transform: scaleY(0.005) scaleX(1);
  }

  100% {
    transform: scaleY(0.005) scaleX(0);
  }
}

@keyframes zoomIn {
  0% {
    transform: scale(0);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes zoomOut {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(0);
  }
}

/* ============= Essential Modals Style ============== */
#MessageModal {
  z-index: 300;
}

#MessageModal .TheMessage {
  font-family: MFontB;
  font-size: 16px;
  color: var(--TextColor);
  display: flex;
  margin: 20px 5px;
  width: 100%;
  justify-content: center;
  text-justify: inter-word;
  flex-wrap: wrap;
  text-align: center;
}

#ChooseModal {
  z-index: 200;
}

#ChooseModal .ChooseModalQuestion {
  font-family: MFontB;
  font-size: 16px;
  color: var(--TextColor);
  display: flex;
  margin: 20px 10px;
  width: fit-content;
  justify-content: center;
  text-justify: inter-word;
  flex-wrap: wrap;
  text-align: center;
}

#LoadingModal {
  z-index: 400;
}

#LoadingModal .LoadingText {
  font-family: MFontB;
  font-size: 16px;
  color: var(--TextColor);
  margin: 10px 5px;
  width: 100%;
}

/* #endregion */

.MlabelText {
  display: flex;
  width: min-content;
  white-space: nowrap;
  font-size: 17px;
  font-family: 'MFontB';
}

.MlabelNumber {
  display: flex;
  width: min-content;
  white-space: nowrap;
  font-size: 17px;
  font-family: 'MFontB';
  margin: 5px;
}

.RequestsMTable {
  width: 100%;
  border: 1px solid var(--RequestDetailsTableColor3);
  border-radius: 5px;
  margin: 5px 20px;
}

.RequestsMTable tr:nth-child(even) {
  background-color: var(--RequestDetailsTableColor1);
}

.RequestsMTable th {
  padding: 7px 10px;
  background-color: var(--RequestDetailsTableColor2);
  width: 100%;
  text-align: center;
  border-bottom: 1px solid var(--RequestDetailsTableColor3);
  font-size: 14px;
}

.RequestsMTable td {
  padding: 5px 10px;
  min-width: 150px;
  width: 100%;
  text-align: center;
  white-space: nowrap;
}

/* #region Images Container  */
.ImagesContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
  height: min-content;
  margin: 10px 0;
}

.ImagesContainer .InformationRequestImage {
  display: flex;
  border: 1px solid var(--MediumLightColor);
  border-radius: 5px;
  flex-wrap: wrap;
  width: min-content;
  padding: 5px;
  margin: 5px;
  height: min-content;
}

.ImagesContainer .InformationRequestImage .InformationRequestImageTitle {
  display: flex;
  width: 100%;
  padding: 5px 0 15px 0;
  justify-content: center;
  white-space: nowrap;
}

.ImagesContainer .InformationRequestImage .InformationRequestImagePreview {
  display: flex;
  width: 100%;
  border-radius: 5px;
  width: 120px;
  height: 120px;
  position: relative;
}

.ImagesContainer .InformationRequestImage .InformationRequestImagePreview .InformationRequestImagePreviewOverlay {
  display: flex;
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  opacity: 0;
  transition-duration: 0.3s;
  cursor: pointer;
  justify-content: center;
  align-items: center;
  border-radius: 5px;
}

.InformationRequestImagePreviewOverlay svg {
  width: 40px;
  height: 40px;
  display: flex;
}

.ImagesContainer .InformationRequestImage .InformationRequestImagePreview .InformationRequestImagePreviewOverlay:hover {
  opacity: 1;
}

.ImagesContainer .InformationRequestImage .InformationRequestImagePreview img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 5px;
}

/* #endregion */

/* #region MStepper */
.MStepper {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
}

.MStepperHeader {
  display: flex;
  width: 100%;
  align-items: center;
  margin-bottom: 10px;
}

.MStepHeader {
  display: flex;
  width: min-content;
  align-items: center;
  padding: 10px;
  border-radius: 5px;
  transition-duration: 0.3s;
}

.MStepHeaderIcon {
  display: flex;
  width: 25px;
  height: 25px;
  min-width: 25px;
  min-height: 25px;
  border-radius: 50%;
  border: 1px solid var(--TextColor);
  color: var(--TextColor);
  justify-content: center;
  align-items: center;
  font-family: 'MFontB';
  line-height: 0.3;
  transition-duration: 0.3s;
  margin-left: 5px;
}

.MStepHeaderTitle {
  font-family: 'MFontB';
  display: flex;
  white-space: nowrap;
  width: min-content;
  height: 100%;
  align-items: center;
  color: var(--TextColor);
  transition-duration: 0.3s;
}

.ActiveMStepHeader .MStepHeaderIcon {
  border: 1px solid var(--PrimaryColor);
  background-color: var(--PrimaryColor);
  color: #fff;
}

.ActiveMStepHeader .MStepHeaderTitle {
  color: var(--PrimaryColor);
}

.MStepHeader:hover {
  background-color: var(--MStepperheaderHoverBG);
}

.MStepperHeaderLine {
  display: flex;
  flex: 1;
  background-color: var(--TextColor);
  height: 1px;
}

.MStepperContent {
  display: flex;
  width: 100%;
  background-color: var(--MStepperContentBG);
  border-radius: 5px;
  flex-wrap: nowrap;
  white-space: nowrap;
}

.MStepContent {
  display: flex;
  min-width: calc(100% - 20px);
  padding: 20px 10px;
  height: min-content;
  transition-duration: 0.3s;
  transform: translateX(0);
  justify-content: center;
}

.MStepContentWrapper {
  display: none;
  flex-wrap: wrap;
}

.ActiveMStepContent .MStepContentWrapper {
  display: flex;
  justify-content: center;
  width: 100%;
}

/* #endregion */

/* #region MImage */
.MImage {
  display: flex;
  width: 130px;
  max-width: 130px;
  border: 1px solid #aaa;
  border-radius: 5px;
  flex-wrap: wrap;
  width: min-content;
  margin: 5px;
}

.MImagePreview {
  display: flex;
  width: 120px;
  height: 120px;
  justify-content: center;
  align-items: center;
  margin: 5px;
  position: relative;
}

.MImagePreview img {
  display: flex;
  width: 100%;
  height: 100%;
  border-radius: 5px;
  object-fit: cover;
}

.MImage:not([noimage]) .MImagePreview:hover .MImageButtons {
  pointer-events: auto;
  opacity: 1;
}

.MImagePicker {
  display: flex;
  width: 100%;
}

.MImagePicker .MButton {
  width: 100%;
  padding: 7px;
  justify-content: center;
  align-items: center;
  text-align: center;
  height: 45px;
}

.MImageButtons {
  display: flex;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  justify-content: center;
  align-items: center;
  position: absolute;
  pointer-events: none;
  opacity: 0;
  transition-duration: 0.3s;
}

.MImageBTN {
  display: flex;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

.MImageBTN svg {
  display: flex;
  width: 60%;
  height: 60%;
  fill: #fff;
  transition-duration: 0.3s;
}

.MImageBTN:hover svg {
  width: 70%;
  height: 70%;
}

.ShowMImage:hover svg {
  fill: var(--PrimaryColor)
}

.DeleteMImage:hover svg {
  fill: red
}

.MImage[required] .DeleteMImage {
  display: none;
}
/* #endregion */